const express = require('express')
const app = express()
const morgan = require('morgan');
const logger = require('./logger');
const authorize = require('./authorize');

// req => middleware => use

// app use allows express to include common logic to be applied for all routes by setting it once
// app.use('/api', logger) will apply the callback to all routes that begin with /api 
//app.use([logger, authorize]);

app.use([logger, authorize]);

// static assets
app.use(express.static('./methods-public'));

//parse form data sent, urlencoded is a built in middlware function used to partse incoming requests with urlencoded payloads based on body parser
app.use(express.urlencoded({ extended: false}));

//app.use(express.static('./public'));
app.use(morgan('tiny'));

app.get('/', (req, res) => {
    res.send('Home');
})

app.get('/about', (req, res) => {
    res.send('About');
})

app.get('/api/products', (req, res) => {
    res.send('Products');
})

// if middleware functions need to be used for some specific url's you can pass them in the .get function signature
// this will apply middleware functions only to this specific route vs app.use would apply it to all of them
app.get('/api/items', [logger, authorize], (req, res) => {
    res.send('Items');
})

app.listen(3000, () => {
    console.log('listening on port 3000...')
})